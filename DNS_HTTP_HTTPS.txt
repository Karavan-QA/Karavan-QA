Что такое DNS (Domain Name System) и в чём разница протоколов HTTP/HTTPS и их версий.


DNS (англ. Domain Name System «система доменных имён») — это распределённая система, которая помогает браузерам находить адреса сайтов по их именам.
Работает она благодаря разветвлённой сети серверов, на которых хранится информация обо всех сайтах интернета. То есть система представляет из себя
базу данных (табличку) с перечнем всех сайтов мира, данные в которую заносятся автоматически.
Система является чем-то вроде сталкера в мире интернета.

HTTP — широко распространённый протокол передачи данных, изначально предназначенный для передачи гипертекстовых документов (то есть документов,
которые могут содержать ссылки, позволяющие организовать переход к другим документам). Задача, которая традиционно решается с помощью 
протокола HTTP — обмен данными между пользовательским приложением, осуществляющим доступ к веб-ресурсам (обычно это веб-браузер) и веб-сервером. 
На данный момент именно благодаря протоколу HTTP обеспечивается работа Всемирной паутины.

HTTPS (Hypertext Transport Protocol Secure) – это протокол, который обеспечивает целостность и конфиденциальность данных при их передаче между
сайтом и устройством пользователя. 

Разница между HTTPS и HTTP:

1) Визуально различие в букве S, которая означает «Secure» — безопасность. Это небольшое, но ключевое отличие может сохранить компьютер 
от заражения вирусами, а бизнес — от потери денег и клиентов.
2) В HTTP отсутствует механизм защиты для шифрования данных, в то время как HTTPS для защиты связи между сервером и клиентом использует 
цифровой сертификат SSL или TLS.
3) HTTP работает на уровне приложения, а HTTPS - на транспорном уровне.
4) HTTP по умолчанию работает по 80-ому порту, а HTTPS – через 443-му.
5) HTTP передает данные открытым текстом, а HTTPS - зашифрованным.
6) HTTP по сравнению с HTTPS работает быстрее, поскольку последнему нужно время для шифрования канала связи.

Разница в версиях протоколов:

Последняя версия HTTP/3,до этого были версии HTTP 0.9; 1.0; 1.1 и 2.

HTTP/0.9:
Протокол имел всего четыре термина: Соединение, Разъединение, Запрос и Ответ. Не было ни заголовков, ни статусов ответа и множества
других инструментов, которые мы пользуемся сейчас. Протокол работал поверх TCP, и соединение разрывалось сразу же после отправки ответа.

Отличия HTTP/1.0 от HTTP/0.9:

Каждый запрос теперь сопровождается версией протокола;
- Ответ начинается с кода статуса ответа;
- Запрос и Ответ теперь сопровождаются Заголовками — HTTP Headers;
- Возможность передачи метаданных в заголовках, делает протокол гибким и расширяемым;
- Определение Content-Type в заголовках позволяет передавать документы, отличные от HTML файлов.
Однако, HTTP/1.0 не является официальным стандартом.

Отличия HTTP/1.1 от HTTP/1.0:

- Поддержка виртуальных хостов, позволяющих серверам обслуживать несколько доменов на одном IP адресе;
- Поддержка постоянных соединений, позволяющих браузерам делать несколько запросов в рамках одного TCP соединения;
- Поддержка кеширования для экономии трафика и увеличения скорости;
- Пересылка данных частями, когда не известен размер итоговой страницы;
- Согласования, такие как: язык, кодировка или тип данных, позволяющих клиенту и серверу договориться об особенностях требуемого ответа.

Протокол HTTP/1.1 оказался очень удачным и стабильно прослужил в изначальной редакции более 15 лет. В процессе использования появилось
только расширение протокола HTTPS, обеспечивающее шифрованную передачу данных между браузером и сервером используя механизмы SSL/TLS.

HTTP/2 нацелен на более эффективное использование сетевых ресурсов и уменьшение видимых задержек. Это привело к созданию нового бинарного
слоя формата данных, не имеющего обратной совместимости с HTTP/1.x серверами и клиентами.
Первый черновик HTTP/2 был построен на основе спецификации SPDY. 
Важными аспектами стали параллелизация, приоритизация и управление потоками передачи данных:
- Под потоком понимается двунаправленная передача информации внутри установленного TCP соединения;
- Передача осуществляется посредством одного TCP соединения с любым количеством параллельных потоков;
- Такой протокол называется мультплексированным. Несколько параллельных запросов могут использовать одно соединение;
- Это обеспечивает возможность для разной приоритезации передаваемых данных;
- Также, это позволяет серверу самостоятельно инициировать передачу данных;
- Вместо текстовых данных, протокол использует бинарный формат передачи данных, что позволяет увеличить производительность и безопасность;
- Заголовки запросов и ответов сжимаются принудительно.

HTTP/3:

С появлением смартфонов и множества других портативных устройств с беспроводной связью, общее количество веб трафика серьезно увеличилось. 
HTTP/2, работающий через TCP со своей проблемой head-of-line blocking, мог создавать задержки в запросах и ответах.
Также HTTP/2 не имел строгого требования к шифрованию данных, и по прежнему оставались проблемы с безопасностью при перехвате заголовков 
запросов и ответов.
HTTP/3 проектируется для решения этих проблем, и сейчас проходит тестирование с опубликованной спецификацией. 
Новый протокол должен решать текущие проблемы скорости, надёжности и безопасности для широкого сектора устройств.
- Вместо TCP, HTTP/3 строится на основе нового протокола QUIC, разрабатываемого в Google с 2012 года. 
QUIC работает через протокол UDP (User Datagram Protocol);
- QUIC сам обеспечивает мультплексирование, и потеря одного пакета повлияет только на имеющий к этому пакету поток, другие потоки в рамках
соединения продолжат свою работу;
- Заголовки запросов и ответов сжимаются QPACK вместо HPACK в HTTP/2;
- Для шифрования используется TLS 1.3 эффективно использующийся в HTTPS.

Последние версии браузеров Chrome, Firefox, Edge, Opera и некоторые мобильные браузеры уже поддерживают работу по HTTP/3, но для работы 
должна быть и поддержка со стороны сервера.
